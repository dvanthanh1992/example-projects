name: Build Docker Image with requirements
run-name: >
  Site : ${{ inputs.site }} -
  Build Image with Dockerfile at ${{ inputs.context }}
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      site:
        description: 'Build Site'
        required: true
        default: 'hcm-lab'
        type: environment

      context:
        description: 'Specify a filepath of Dockerfile'
        required: true
        default: './camera-app'
        type: choice
        options:
          - './camera-app'
          - './infrastructure'

      build-contexts:
        description: 'Specify a filepath of requirements'
        required: true
        default: 'requirements=camera-app/requirements'
        type: choice
        options:
          - 'requirements=camera-app/requirements'
          - 'requirements=infrastructure/requirements'

jobs:
  build_docker_images:
    runs-on: [self-hosted, "${{ inputs.site }}"]
    environment: "${{ inputs.site }}"

    container:
      image: docker:latest
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GitHub Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.event.inputs.site }}-latest
            type=raw,value=${{ github.event.inputs.site }}-{{ date 'YYMMDD' }}
            type=sha,prefix=${{ github.event.inputs.site }}
          labels: |
            org.opencontainers.image.description="Requirements version: ${{ github.sha }}"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          build-contexts: ${{ inputs.build-contexts }}
          push: true
          no-cache: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
